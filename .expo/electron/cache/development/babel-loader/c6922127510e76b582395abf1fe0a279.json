{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _TextInput = _interopRequireDefault(require(\"react-native-web/dist/exports/TextInput\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"react-native-web/dist/exports/ScrollView\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _component = require(\"component\");\n\nvar _store = _interopRequireDefault(require(\"services/store\"));\n\nvar _hook = require(\"hook\");\n\nvar _strings = require(\"services/strings\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ClusterAddField = function ClusterAddField(_ref) {\n  var onPress = _ref.onPress;\n\n  var handlePress = function handlePress() {\n    onPress();\n  };\n\n  return (0, _jsxRuntime.jsx)(_component.Container, {\n    padded: true,\n    onPress: handlePress,\n    children: (0, _jsxRuntime.jsx)(_component.Container, {\n      style: {\n        borderColor: 'white',\n        borderWidth: 1,\n        borderRadius: 8\n      },\n      children: (0, _jsxRuntime.jsxs)(_component.Container, {\n        padded: true,\n        row: true,\n        spaceBetween: true,\n        justifyCenter: true,\n        children: [(0, _jsxRuntime.jsx)(_component.Container, {\n          children: (0, _jsxRuntime.jsx)(_component.Text.Body, {\n            color: \"white\",\n            children: \"\\u2795 AGREGAR CAMPO\"\n          })\n        }), (0, _jsxRuntime.jsx)(_component.Container, {})]\n      })\n    })\n  });\n};\n\nvar ModelAdd = function ModelAdd() {\n  var _route$params, _route$params2;\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      modelName = _useState2[0],\n      setModelName = _useState2[1];\n\n  var route = (0, _native.useRoute)();\n  (0, _hook.useBackButton)();\n\n  var handleModelNameChange = function handleModelNameChange(text) {\n    return setModelName(text);\n  };\n\n  var openModal = (0, _store.default)(function (state) {\n    return state.openModal;\n  });\n  var key = route === null || route === void 0 ? void 0 : (_route$params = route.params) === null || _route$params === void 0 ? void 0 : _route$params.key;\n  var model = route === null || route === void 0 ? void 0 : (_route$params2 = route.params) === null || _route$params2 === void 0 ? void 0 : _route$params2.model;\n  return (0, _jsxRuntime.jsxs)(_component.Container, {\n    flex: true,\n    spaceBetween: true,\n    children: [(0, _jsxRuntime.jsxs)(_component.Container, {\n      children: [model ? (0, _jsxRuntime.jsx)(_component.Container, {\n        padded: true,\n        children: (0, _jsxRuntime.jsxs)(_component.Text.TitleH3, {\n          children: [\"(\", key, \")\"]\n        })\n      }) : (0, _jsxRuntime.jsxs)(_component.Container, {\n        paddingX: 1,\n        children: [(0, _jsxRuntime.jsx)(_component.Spacer.Large, {}), (0, _jsxRuntime.jsx)(_component.Text.Small, {\n          children: \"TITULO\"\n        }), (0, _jsxRuntime.jsx)(_component.Spacer.Small, {}), (0, _jsxRuntime.jsx)(_TextInput.default, {\n          style: _styles.default.input,\n          value: modelName,\n          defaultValue: modelName,\n          placeholder: \"Nombre del modelo...\",\n          returnKeyType: \"done\",\n          onChangeText: handleModelNameChange\n        }), (0, _jsxRuntime.jsx)(_component.Spacer.Small, {}), (0, _jsxRuntime.jsxs)(_component.Text.Body, {\n          children: [\"ID: \", (0, _strings.camelize)(!!(modelName !== null && modelName !== void 0 && modelName.length) ? modelName : '-')]\n        }), (0, _jsxRuntime.jsx)(_component.Spacer.Small, {})]\n      }), (0, _jsxRuntime.jsx)(ClusterAddField, {\n        onPress: function onPress() {\n          if (!key) {\n            if (!(modelName !== null && modelName !== void 0 && modelName.length)) {\n              alert('Por favor ingresa el nombre del modelo');\n              return;\n            }\n          }\n\n          openModal('Donate', {\n            modelName: modelName || key,\n            modelSlug: (0, _strings.camelize)(modelName) || key\n          });\n        }\n      }), model && (0, _jsxRuntime.jsxs)(_component.Container, {\n        children: [(0, _jsxRuntime.jsxs)(_component.Container, {\n          padded: true,\n          children: [(0, _jsxRuntime.jsx)(_component.Text.Small, {\n            children: \"CAMPOS\"\n          }), (0, _jsxRuntime.jsx)(_component.Spacer.Medium, {})]\n        }), (0, _jsxRuntime.jsx)(_ScrollView.default, {\n          showsVerticalScrollIndicator: false,\n          children: (0, _jsxRuntime.jsx)(_component.Container, {\n            paddingX: 1,\n            children: Object.keys(model).map(function (key, index) {\n              return (0, _jsxRuntime.jsxs)(_component.Container, {\n                children: [(0, _jsxRuntime.jsxs)(_component.Text.Body, {\n                  children: [index, \". \", model[key].fieldName, \" (\", model[key].fieldSlug, \")\"]\n                }), (0, _jsxRuntime.jsx)(_component.Spacer.Medium, {})]\n              }, model[key].modelSlug);\n            })\n          })\n        })]\n      })]\n    }), (0, _jsxRuntime.jsxs)(_component.Container, {\n      alignCenter: true,\n      padded: true,\n      children: [(0, _jsxRuntime.jsx)(_component.Button.Primary, {\n        title: \"GUARDAR\"\n      }), (0, _jsxRuntime.jsx)(_component.Spacer.Large, {})]\n    })]\n  });\n};\n\nvar _default = ModelAdd;\nexports.default = _default;","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/views/Model/ModelAdd/index.js"],"names":["ClusterAddField","onPress","handlePress","borderColor","borderWidth","borderRadius","ModelAdd","modelName","setModelName","useState","route","useBackButton","handleModelNameChange","openModal","useStore","state","key","model","styles","camelize","alert","modelSlug","Object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextInput, ScrollView } from 'react-native'\nimport { useRoute } from '@react-navigation/native'\nimport { Container, Text, Spacer, Button } from 'component'\nimport useStore from 'services/store'\nimport { useBackButton } from 'hook'\nimport { camelize } from 'services/strings'\nimport styles from './styles'\n\nconst ClusterAddField = ({ onPress }) => {\n    const handlePress = () => {\n        onPress()\n    }\n\n    return (\n        <Container padded onPress={handlePress}>\n            <Container style={{\n                borderColor: 'white',\n                borderWidth: 1,\n                borderRadius: 8,\n            }}>\n                <Container padded row spaceBetween justifyCenter>\n                    <Container>\n                        <Text.Body color=\"white\">➕ AGREGAR CAMPO</Text.Body>\n                    </Container>\n                    <Container>\n\n                    </Container>\n                </Container>\n            </Container>\n        </Container>\n    )\n}\n\nconst ModelAdd = () => {\n    const [modelName, setModelName] = useState(null)\n    const route = useRoute()\n\n    useBackButton()\n\n    const handleModelNameChange = (text) => setModelName(text)\n    const openModal = useStore(state => state.openModal)\n\n    const key = route?.params?.key\n    const model = route?.params?.model\n\n    return (\n        <Container flex spaceBetween>\n            <Container>\n                {model ?\n                    <Container padded>\n                        <Text.TitleH3>({key})</Text.TitleH3>\n                    </Container> :\n                    <Container paddingX={1}>\n                        <Spacer.Large />\n                        <Text.Small>TITULO</Text.Small>\n                        <Spacer.Small />\n                        <TextInput\n                            style={styles.input}\n                            value={modelName}\n                            defaultValue={modelName}\n                            placeholder=\"Nombre del modelo...\"\n                            returnKeyType=\"done\"\n                            onChangeText={handleModelNameChange}\n                        />\n                        <Spacer.Small />\n                        <Text.Body>ID: {camelize(!!modelName?.length ? modelName : '-')}</Text.Body>\n                        <Spacer.Small />\n                    </Container>}\n\n                <ClusterAddField\n                    onPress={() => {\n                        if (!key) {\n                            if (!modelName?.length) {\n                                alert('Por favor ingresa el nombre del modelo')\n                                return\n                            }\n                        }\n\n                        openModal('Donate', {\n                            modelName: modelName || key,\n                            modelSlug: camelize(modelName) || key\n                        })\n                    }}\n                />\n\n                {model && <Container>\n                    <Container padded>\n                        <Text.Small>CAMPOS</Text.Small>\n                        <Spacer.Medium />\n                    </Container>\n                    <ScrollView showsVerticalScrollIndicator={false}>\n                        <Container paddingX={1}>\n                            {Object.keys(model).map((key, index) => (\n                                <Container key={model[key].modelSlug}>\n                                    <Text.Body>{index}. {model[key].fieldName} ({model[key].fieldSlug})</Text.Body>\n                                    <Spacer.Medium />\n                                </Container>\n                            ))}\n                        </Container>\n                    </ScrollView>\n                </Container>}\n            </Container>\n\n            <Container alignCenter padded>\n                <Button.Primary title=\"GUARDAR\" />\n                <Spacer.Large />\n            </Container>\n        </Container>\n    );\n}\n\nexport default ModelAdd"]},"metadata":{},"sourceType":"script"}