{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _expo = require(\"expo\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _theme = require(\"./constants/theme\");\n\nvar _views = _interopRequireDefault(require(\"./views\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction App() {\n  return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n    theme: _objectSpread(_objectSpread({}, _native.DefaultTheme), {}, {\n      colors: _objectSpread({}, _theme.light)\n    }),\n    children: (0, _jsxRuntime.jsx)(Stack.Navigator, {\n      screenOptions: {\n        gestureEnabled: false\n      },\n      children: (0, _jsxRuntime.jsx)(Stack.Screen, {\n        name: \"Home\",\n        component: _views.default.Home\n      })\n    })\n  });\n}\n\n(0, _expo.registerRootComponent)(App);","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/index.js"],"names":["Stack","colors","gestureEnabled","Views","registerRootComponent"],"mappings":";;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPA;;AAUA,IAAMA,KAAK,GAAX,kCAAA;;AAEA,SAAA,GAAA,GAAe;AACb,SACE,qBAAA,2BAAA,EAAA;AACE,IAAA,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA;AAEHC,MAAAA,MAAM,EAAA,aAAA,CAAA,EAAA,EAHV,YAGU;AAFH,KAAA,CADP;AAAA,IAAA,QAAA,EAQE,qBAAC,KAAD,CAAA,SAAA,EAAA;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,cAAc,EADjC;AACiB,OADjB;AAAA,MAAA,QAAA,EAGE,qBAAC,KAAD,CAAA,MAAA,EAAA;AAAc,QAAA,IAAI,EAAlB,MAAA;AAA0B,QAAA,SAAS,EAAEC,eAZ3C;AAYM,OAAA;AAHF,KAAA;AARF,GAAA,CADF;AAqBFC;;AAAAA,iCAAAA,GAAAA","sourcesContent":["import React from \"react\";\nimport { registerRootComponent } from \"expo\";\n\nimport { DefaultTheme } from \"@react-navigation/native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { light } from \"./constants/theme\";\nimport Views from './views'\nimport { StyleSheet, Text, Button } from \"react-native\";\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer\n      theme={{\n        ...DefaultTheme,\n        colors: {\n          ...light,\n        },\n      }}\n    >\n      <Stack.Navigator\n        screenOptions={{ gestureEnabled: false }}\n      >\n        <Stack.Screen name=\"Home\" component={Views.Home} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"]},"metadata":{},"sourceType":"script"}