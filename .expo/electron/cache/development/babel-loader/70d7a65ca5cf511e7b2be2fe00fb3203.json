{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _component = require(\"component\");\n\nvar _menu = _interopRequireDefault(require(\"constants/menu\"));\n\nvar _arrow = _interopRequireDefault(require(\"assets/arrow.png\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CustomDrawerContent = function CustomDrawerContent(_ref) {\n  var _Menu$filter;\n\n  var navigation = _ref.navigation;\n  return (0, _jsxRuntime.jsxs)(_component.Container, {\n    flex: true,\n    spaceBetween: _Platform.default.OS === 'ios',\n    children: [(0, _jsxRuntime.jsxs)(_component.Container, {\n      alignCenter: true,\n      children: [(0, _jsxRuntime.jsx)(_component.Spacer.Large, {}), (0, _jsxRuntime.jsx)(_component.Spacer.Large, {}), (0, _jsxRuntime.jsx)(_component.Container, {\n        row: true,\n        alignCenter: true,\n        children: (0, _jsxRuntime.jsxs)(_component.Container, {\n          children: [(0, _jsxRuntime.jsx)(_component.Text.TitleH1, {\n            children: \"CMS\"\n          }), (0, _jsxRuntime.jsx)(_component.Spacer.Small, {})]\n        })\n      })]\n    }), (0, _jsxRuntime.jsxs)(_component.Container, {\n      children: [(_Menu$filter = _menu.default.filter(function (item) {\n        return !!item.visible;\n      })) === null || _Menu$filter === void 0 ? void 0 : _Menu$filter.sort(function (a, b) {\n        return a.orden - b.orden;\n      }).map(function (drawerItem) {\n        return (0, _jsxRuntime.jsx)(_TouchableOpacity.default, {\n          onPress: function onPress() {\n            navigation.navigate(drawerItem.pantalla);\n          },\n          children: (0, _jsxRuntime.jsxs)(_component.Container, {\n            row: true,\n            alignCenter: true,\n            style: _styles.default.drawerItemContainer,\n            children: [(0, _jsxRuntime.jsx)(_Image.default, {\n              source: _arrow.default,\n              style: _styles.default.drawerItemIcon\n            }), (0, _jsxRuntime.jsx)(_component.Spacer.Small, {}), (0, _jsxRuntime.jsx)(_component.Text.TitleH4, {\n              children: drawerItem.titulo\n            })]\n          })\n        }, drawerItem.titulo);\n      }), (0, _jsxRuntime.jsx)(_component.Spacer.Large, {})]\n    })]\n  });\n};\n\nvar _default = CustomDrawerContent;\nexports.default = _default;","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/views/Drawer/index.js"],"names":["CustomDrawerContent","navigation","Platform","Menu","item","a","b","drawerItem","styles"],"mappings":";;;;;;;AAAA;;;;;;;;AAMA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,IAAtBA,EAA0C;AAAA,MAAA,YAAA;;AAAjBC,MAAAA,UAAiB,GAAA,IAAA,CAAjBA,UAAAA;AAE3B,SACI,sBAAA,oBAAA,EAAA;AAAW,IAAA,IAAI,EAAf,IAAA;AAAgB,IAAA,YAAY,EAAEC,kBAAAA,EAAAA,KAA9B,KAAA;AAAA,IAAA,QAAA,EAAA,CACI,sBAAA,oBAAA,EAAA;AAAW,MAAA,WAAW,EAAtB,IAAA;AAAA,MAAA,QAAA,EAAA,CACI,qBAAA,kBAAA,KAAA,EADJ,EACI,CADJ,EAEI,qBAAA,kBAAA,KAAA,EAFJ,EAEI,CAFJ,EAGI,qBAAA,oBAAA,EAAA;AAAW,QAAA,GAAG,EAAd,IAAA;AAAe,QAAA,WAAW,EAA1B,IAAA;AAAA,QAAA,QAAA,EACI,sBAAA,oBAAA,EAAA;AAAA,UAAA,QAAA,EAAA,CACI,qBAAA,gBAAA,OAAA,EAAA;AAAA,YAAA,QAAA,EADJ;AACI,WAAA,CADJ,EAEI,qBAAA,kBAAA,KAAA,EAPhB,EAOgB,CAFJ;AAAA,SAAA;AADJ,OAAA,CAHJ;AAAA,KAAA,CADJ,EAYI,sBAAA,oBAAA,EAAA;AAAA,MAAA,QAAA,EAAA,CAAA,CAAA,YAAA,GACKC,cAAAA,MAAAA,CAAY,UAAA,IAAA,EAAI;AAAA,eAAI,CAAC,CAACC,IAAI,CAAV,OAAA;AADrB,OACKD,CADL,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACKA,YAAAA,CAAAA,IAAAA,CACU,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,eAAUE,CAAC,CAADA,KAAAA,GAAUC,CAAC,CAArB,KAAA;AADVH,OAAAA,EAAAA,GAAAA,CAEQ,UAAA,UAAA,EAAA;AAAA,eACD,qBAAA,yBAAA,EAAA;AAEI,UAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACXF,YAAAA,UAAU,CAAVA,QAAAA,CAAoBM,UAAU,CAA9BN,QAAAA;AAHR,WAAA;AAAA,UAAA,QAAA,EAMI,sBAAA,oBAAA,EAAA;AACI,YAAA,GAAG,EADP,IAAA;AAEI,YAAA,WAAW,EAFf,IAAA;AAGI,YAAA,KAAK,EAAEO,gBAHX,mBAAA;AAAA,YAAA,QAAA,EAAA,CAKI,qBAAA,cAAA,EAAA;AACI,cAAA,MAAM,EADV,cAAA;AAEI,cAAA,KAAK,EAAEA,gBAPf;AAKI,aAAA,CALJ,EASI,qBAAA,kBAAA,KAAA,EATJ,EASI,CATJ,EAUI,qBAAA,gBAAA,OAAA,EAAA;AAAA,cAAA,QAAA,EAAeD,UAAU,CAhBjC;AAgBQ,aAAA,CAVJ;AAAA,WAAA;AANJ,SAAA,EACSA,UAAU,CAFlB,MACD,CADC;AAHb,OACKJ,CADL,EAwBI,qBAAA,kBAAA,KAAA,EArCZ,EAqCY,CAxBJ;AAAA,KAAA,CAZJ;AAAA,GAAA,CADJ;AAFJ,CAAA;;eA6CA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Image,\n    TouchableOpacity,\n    Platform,\n} from \"react-native\";\nimport { Container, Dropdown, Text, Spacer } from 'component'\nimport Menu from 'constants/menu'\nimport ArrowAsset from 'assets/arrow.png'\nimport styles from './styles'\n\nconst CustomDrawerContent = ({ navigation }) => {\n\n    return (\n        <Container flex spaceBetween={Platform.OS === 'ios'}>\n            <Container alignCenter>\n                <Spacer.Large />\n                <Spacer.Large />\n                <Container row alignCenter>\n                    <Container>\n                        <Text.TitleH1>CMS</Text.TitleH1>\n                        <Spacer.Small />\n                    </Container>\n                </Container>\n            </Container>\n\n            <Container>\n                {Menu.filter(item => !!item.visible)\n                    ?.sort((a, b) => a.orden - b.orden)\n                    .map((drawerItem) => (\n                        <TouchableOpacity\n                            key={drawerItem.titulo}\n                            onPress={() => {\n                                navigation.navigate(drawerItem.pantalla);\n                            }}\n                        >\n                            <Container\n                                row\n                                alignCenter\n                                style={styles.drawerItemContainer}\n                            >\n                                <Image\n                                    source={ArrowAsset}\n                                    style={styles.drawerItemIcon}\n                                />\n                                <Spacer.Small />\n                                <Text.TitleH4>{drawerItem.titulo}</Text.TitleH4>\n                            </Container>\n                        </TouchableOpacity>\n                    ))}\n                <Spacer.Large />\n            </Container>\n        </Container>\n    );\n};\n\nexport default CustomDrawerContent"]},"metadata":{},"sourceType":"script"}