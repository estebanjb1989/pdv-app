{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.initialState = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar initialState = {};\nexports.initialState = initialState;\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var fetching = null;\n\n  if (!action.type.includes('/')) {\n    return state;\n  }\n\n  var _action$type$split = action.type.split(['/']),\n      _action$type$split2 = (0, _slicedToArray2.default)(_action$type$split, 2),\n      reducerKey = _action$type$split2[0],\n      actionName = _action$type$split2[1];\n\n  if (action.type.includes('START')) {\n    fetching = true;\n  }\n\n  if (action.type.includes('SUCCESS') || action.type.includes('ERROR')) {\n    fetching = false;\n  }\n\n  if (reducerKey === 'request' || fetching === null) {\n    return state;\n  }\n\n  var names = actionName.split('_');\n  names = names.slice(0, names.length - 1);\n  names = (0, _lodash.camelCase)(names);\n\n  var nextState = _objectSpread(_objectSpread({}, state), {}, (0, _defineProperty2.default)({}, reducerKey, _objectSpread(_objectSpread({}, state[reducerKey]), {}, (0, _defineProperty2.default)({}, names, fetching))));\n\n  return nextState;\n};\n\nexports.reducer = reducer;","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/pdv-app/redux/modules/fetching.js"],"names":["initialState","reducer","state","action","fetching","reducerKey","actionName","names","camelCase","nextState"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEO,IAAMA,YAAY,GAAlB,EAAA;;;AAEA,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,GAAiD;AAAtCC,MAAAA,KAAsC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA9BF,YAARE;AAAsBC,MAAAA,MAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAATA;AAC5C,MAAIC,QAAQ,GAAZ,IAAA;;AAEA,MAAI,CAACD,MAAM,CAANA,IAAAA,CAAAA,QAAAA,CAAL,GAAKA,CAAL,EAAgC;AAC9B,WAAA,KAAA;AAGF;;AAAA,MAAA,kBAAA,GAAiCA,MAAM,CAANA,IAAAA,CAAAA,KAAAA,CAAkB,CAAnD,GAAmD,CAAlBA,CAAjC;AAAA,MAAA,mBAAA,GAAA,6BAAA,kBAAA,EAAA,CAAA,CAAA;AAAA,MAAOE,UAAP,GAAA,mBAAA,CAAA,CAAA,CAAA;AAAA,MAAmBC,UAAnB,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAEA,MAAIH,MAAM,CAANA,IAAAA,CAAAA,QAAAA,CAAJ,OAAIA,CAAJ,EAAmC;AACjCC,IAAAA,QAAQ,GAARA,IAAAA;AAGF;;AAAA,MAAID,MAAM,CAANA,IAAAA,CAAAA,QAAAA,CAAAA,SAAAA,KAAmCA,MAAM,CAANA,IAAAA,CAAAA,QAAAA,CAAvC,OAAuCA,CAAvC,EAAsE;AACpEC,IAAAA,QAAQ,GAARA,KAAAA;AAGF;;AAAA,MAAIC,UAAU,KAAVA,SAAAA,IAA4BD,QAAQ,KAAxC,IAAA,EAAmD;AACjD,WAAA,KAAA;AAGF;;AAAA,MAAIG,KAAK,GAAGD,UAAU,CAAVA,KAAAA,CAAZ,GAAYA,CAAZ;AACAC,EAAAA,KAAK,GAAGA,KAAK,CAALA,KAAAA,CAAAA,CAAAA,EAAeA,KAAK,CAALA,MAAAA,GAAvBA,CAAQA,CAARA;AACAA,EAAAA,KAAK,GAAGC,uBAARD,KAAQC,CAARD;;AAEA,MAAME,SAAS,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,8BAAA,EAAA,EAAA,UAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAGRP,KAAK,CAHG,UAGH,CAHG,CAAA,EAAA,EAAA,EAAA,8BAAA,EAAA,EAAA,KAAA,EAAf,QAAe,CAAA,CAAA,CAAA,CAAf;;AAQA,SAAA,SAAA;AAjCK,CAAA","sourcesContent":["import { camelCase } from 'lodash'\n\nexport const initialState = {}\n\nexport const reducer = (state = initialState, action = {}) => {\n  let fetching = null\n\n  if (!action.type.includes('/')) {\n    return state\n  }\n\n  const [reducerKey, actionName] = action.type.split(['/'])\n\n  if (action.type.includes('START')) {\n    fetching = true\n  }\n\n  if (action.type.includes('SUCCESS') || action.type.includes('ERROR')) {\n    fetching = false\n  }\n\n  if (reducerKey === 'request' || fetching === null) {\n    return state\n  }\n\n  let names = actionName.split('_')\n  names = names.slice(0, names.length - 1)\n  names = camelCase(names)\n\n  const nextState = {\n    ...state,\n    [reducerKey]: {\n      ...state[reducerKey],\n      [names]: fetching,\n    },\n  }\n\n  return nextState\n}\n"]},"metadata":{},"sourceType":"script"}