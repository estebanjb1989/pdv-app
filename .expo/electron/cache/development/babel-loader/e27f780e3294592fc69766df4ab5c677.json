{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _expoLinearGradient = require(\"expo-linear-gradient\");\n\nvar DocumentPicker = _interopRequireWildcard(require(\"expo-document-picker\"));\n\nvar _component = require(\"../../component\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  return (0, _jsxRuntime.jsx)(_component.Container, {\n    row: true,\n    children: (0, _jsxRuntime.jsx)(_component.Container, {\n      style: {\n        backgroundColor: 'whitesmoke'\n      }\n    })\n  });\n};\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar _default = Home;\nexports.default = _default;","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/views/Home/index.js"],"names":["Home","navigation","backgroundColor","styles","StyleSheet","container","flex","alignItems","justifyContent"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,IAAI,GAAJA,SAAAA,IAAAA,CAAO,IAAPA,EAA2B;AAAjBC,MAAAA,UAAiB,GAAA,IAAA,CAAjBA,UAAAA;AACZ,SACI,qBAAA,oBAAA,EAAA;AAAW,IAAA,GAAG,EAAd,IAAA;AAAA,IAAA,QAAA,EACI,qBAAA,oBAAA,EAAA;AAAW,MAAA,KAAK,EAAE;AACdC,QAAAA,eAAe,EAH3B;AAE0B;AAAlB,KAAA;AADJ,GAAA,CADJ;AADJ,CAAA;;AAYA,IAAMC,MAAM,GAAGC,oBAAAA,MAAAA,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EADK,CAAA;AAETJ,IAAAA,eAAe,EAFN,MAAA;AAGTK,IAAAA,UAAU,EAHD,QAAA;AAITC,IAAAA,cAAc,EALpB;AACe;AADkB,CAAlBJ,CAAf;;eASA,I","sourcesContent":["import React from 'react';\nimport { Text, Button, StyleSheet } from 'react-native';\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport * as DocumentPicker from 'expo-document-picker';\nimport { Container } from '../../component'\n\nconst Home = ({ navigation }) => {\n    return (\n        <Container row>\n            <Container style={{\n                backgroundColor: 'whitesmoke'\n            }}>\n                \n            </Container>\n        </Container>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\nexport default Home\n/*\n<LinearGradient colors={[\"white\", \"#3423ca\"]} style={styles.container}>\n            <Button \n                onPress={() => {\n                DocumentPicker.getDocumentAsync({\n                    type: 'xls'\n                })\n                }} \n                title=\"Importar Excel\"\n            /> \n            <Text>Open up App.tsx to start working on your app!!!</Text>\n        </LinearGradient>*/"]},"metadata":{},"sourceType":"script"}