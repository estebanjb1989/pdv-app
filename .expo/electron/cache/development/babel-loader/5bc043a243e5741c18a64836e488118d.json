{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _expo = require(\"expo\");\n\nvar _expoLinearGradient = require(\"expo-linear-gradient\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _theme = require(\"./constants/theme\");\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar DocumentPicker = _interopRequireWildcard(require(\"expo-document-picker\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction App() {\n  return (0, _jsxRuntime.jsxs)(_expoLinearGradient.LinearGradient, {\n    colors: [\"white\", \"#3423ca\"],\n    style: styles.container,\n    children: [(0, _jsxRuntime.jsx)(_Button.default, {\n      onPress: function onPress() {\n        DocumentPicker.getDocumentAsync({\n          type: 'xls'\n        });\n      },\n      title: \"Importar Excel\"\n    }), (0, _jsxRuntime.jsx)(_Text.default, {\n      children: \"Open up App.tsx to start working on your app!!!\"\n    })]\n  });\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\n(0, _expo.registerRootComponent)(App);","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/index.js"],"names":["styles","DocumentPicker","type","StyleSheet","container","flex","backgroundColor","alignItems","justifyContent","registerRootComponent"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAIA;;AACA;;;;;;;;AAGA;;;;;;;;AAEA,SAAA,GAAA,GAAe;AACb,SACE,sBAAA,kCAAA,EAAA;AAAgB,IAAA,MAAM,EAAE,CAAA,OAAA,EAAxB,SAAwB,CAAxB;AAA8C,IAAA,KAAK,EAAEA,MAAM,CAA3D,SAAA;AAAA,IAAA,QAAA,EAAA,CACE,qBAAA,eAAA,EAAA;AACE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACbC,QAAAA,cAAc,CAAdA,gBAAAA,CAAgC;AAC9BC,UAAAA,IAAI,EADND;AAAgC,SAAhCA;AAFJ,OAAA;AAME,MAAA,KAAK,EAPT;AACE,KAAA,CADF,EASE,qBAAA,aAAA,EAAA;AAAA,MAAA,QAAA,EAVJ;AAUI,KAAA,CATF;AAAA,GAAA,CADF;AAeF;;AAAA,IAAMD,MAAM,GAAGG,oBAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EADK,CAAA;AAETC,IAAAA,eAAe,EAFN,MAAA;AAGTC,IAAAA,UAAU,EAHD,QAAA;AAITC,IAAAA,cAAc,EALlB;AACa;AADoB,CAAlBL,CAAf;;AAYAM,iCAAAA,GAAAA","sourcesContent":["import React from \"react\";\nimport { registerRootComponent } from \"expo\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nimport { DefaultTheme } from \"@react-navigation/native\";\nimport {\n  createDrawerNavigator,\n} from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { light } from \"./constants/theme\";\n\nimport { StyleSheet, Text, Button } from \"react-native\";\nimport * as DocumentPicker from 'expo-document-picker';\n\nfunction App() {\n  return (\n    <LinearGradient colors={[\"white\", \"#3423ca\"]} style={styles.container}>\n      <Button \n        onPress={() => {\n          DocumentPicker.getDocumentAsync({\n            type: 'xls'\n          })\n        }} \n        title=\"Importar Excel\"\n      /> \n      <Text>Open up App.tsx to start working on your app!!!</Text>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"]},"metadata":{},"sourceType":"script"}