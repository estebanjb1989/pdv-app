{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar BodyBold = function BodyBold(_ref) {\n  var children = _ref.children,\n      light = _ref.light,\n      lighter = _ref.lighter,\n      brand = _ref.brand,\n      fontSize = _ref.fontSize,\n      centered = _ref.centered,\n      color = _ref.color,\n      secondaryFont = _ref.secondaryFont,\n      scale = _ref.scale;\n\n  var _useState = (0, _react.useState)(fontSize || 16),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentFont = _useState2[0],\n      setCurrentFont = _useState2[1];\n\n  return (0, _jsxRuntime.jsx)(_Text.default, {\n    onTextLayout: function onTextLayout(e) {\n      if (!scale) return;\n      var lines = e.nativeEvent.lines;\n\n      if (lines.length > 2) {\n        setCurrentFont(currentFont - 1);\n      }\n    },\n    style: [_styles.default.bodyBold, light && _styles.default.light, lighter && _styles.default.lighter, brand && _styles.default.brand, fontSize && {\n      fontSize: currentFont\n    }, centered && _styles.default.centered, color && {\n      color: color\n    }, secondaryFont && _styles.default.secondaryFont],\n    children: children\n  });\n};\n\nBodyBold.propTypes = {\n  children: _propTypes.default.node,\n  light: _propTypes.default.bool,\n  lighter: _propTypes.default.bool,\n  fontSize: _propTypes.default.number,\n  brand: _propTypes.default.bool,\n  centered: _propTypes.default.bool,\n  color: _propTypes.default.string,\n  secondaryFont: _propTypes.default.bool,\n  scale: _propTypes.default.bool\n};\nBodyBold.defaultProps = {\n  children: null,\n  light: false,\n  lighter: false,\n  fontSize: 16,\n  brand: false,\n  centered: false,\n  color: null,\n  secondaryFont: false,\n  scale: false\n};\nvar _default = BodyBold;\nexports.default = _default;","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/component/Text/Variants/BodyBold.js"],"names":["BodyBold","children","light","lighter","brand","fontSize","centered","color","secondaryFont","scale","currentFont","setCurrentFont","useState","lines","e","style","PropTypes"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;AAGA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,IAAXA,EAUA;AATJC,MAAAA,QASI,GAAA,IAAA,CATJA,QAAAA;AAAAA,MACAC,KAQI,GAAA,IAAA,CARJA,KADAD;AAAAA,MAEAE,OAOI,GAAA,IAAA,CAPJA,OAFAF;AAAAA,MAGAG,KAMI,GAAA,IAAA,CANJA,KAHAH;AAAAA,MAIAI,QAKI,GAAA,IAAA,CALJA,QAJAJ;AAAAA,MAKAK,QAII,GAAA,IAAA,CAJJA,QALAL;AAAAA,MAMAM,KAGI,GAAA,IAAA,CAHJA,KANAN;AAAAA,MAOAO,aAEI,GAAA,IAAA,CAFJA,aAPAP;AAAAA,MAQAQ,KACI,GAAA,IAAA,CADJA,KARAR;;AAWA,MAAA,SAAA,GAAsCW,qBAASP,QAAQ,IAAvD,EAAsCO,CAAtC;AAAA,MAAA,UAAA,GAAA,6BAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,WAAP,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAAoBC,cAApB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAEA,SACE,qBAAA,aAAA,EAAA;AACE,IAAA,YAAY,EAAE,SAAA,YAAA,CAAA,CAAA,EAAO;AACnB,UAAI,CAAJ,KAAA,EAAY;AACZ,UAAQE,KAAR,GAAkBC,CAAC,CAAnB,WAAkBA,CAAlB,KAAA;;AACA,UAAID,KAAK,CAALA,MAAAA,GAAJ,CAAA,EAAsB;AACpBF,QAAAA,cAAc,CAACD,WAAW,GAA1BC,CAAc,CAAdA;AAEH;AAPH,KAAA;AAQE,IAAA,KAAK,EAAE,CACLI,gBADK,QAAA,EAELb,KAAK,IAAIa,gBAFJ,KAAA,EAGLZ,OAAO,IAAIY,gBAHN,OAAA,EAILX,KAAK,IAAIW,gBAJJ,KAAA,EAKLV,QAAQ,IAAI;AACVA,MAAAA,QAAQ,EANL;AAKO,KALP,EAQLC,QAAQ,IAAIS,gBARP,QAAA,EASLR,KAAK,IAAI;AACPA,MAAAA,KAAK,EAVF;AASI,KATJ,EAYLC,aAAa,IAAIO,gBApBrB,aAQS,CART;AAAA,IAAA,QAAA,EADF;AACE,GAAA,CADF;AAdF,CAAA;;AA2CAf,QAAQ,CAARA,SAAAA,GAAqB;AACnBC,EAAAA,QAAQ,EAAEe,mBADS,IAAA;AAEnBd,EAAAA,KAAK,EAAEc,mBAFY,IAAA;AAGnBb,EAAAA,OAAO,EAAEa,mBAHU,IAAA;AAInBX,EAAAA,QAAQ,EAAEW,mBAJS,MAAA;AAKnBZ,EAAAA,KAAK,EAAEY,mBALY,IAAA;AAMnBV,EAAAA,QAAQ,EAAEU,mBANS,IAAA;AAOnBT,EAAAA,KAAK,EAAES,mBAPY,MAAA;AAQnBR,EAAAA,aAAa,EAAEQ,mBARI,IAAA;AASnBP,EAAAA,KAAK,EAAEO,mBATThB;AAAqB,CAArBA;AAYAA,QAAQ,CAARA,YAAAA,GAAwB;AACtBC,EAAAA,QAAQ,EADc,IAAA;AAEtBC,EAAAA,KAAK,EAFiB,KAAA;AAGtBC,EAAAA,OAAO,EAHe,KAAA;AAItBE,EAAAA,QAAQ,EAJc,EAAA;AAKtBD,EAAAA,KAAK,EALiB,KAAA;AAMtBE,EAAAA,QAAQ,EANc,KAAA;AAOtBC,EAAAA,KAAK,EAPiB,IAAA;AAQtBC,EAAAA,aAAa,EARS,KAAA;AAStBC,EAAAA,KAAK,EATPT;AAAwB,CAAxBA;eAYA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"react-native\";\nimport style from \"./styles\";\n\n\nconst BodyBold = ({\n  children,\n  light,\n  lighter,\n  brand,\n  fontSize,\n  centered,\n  color,\n  secondaryFont,\n  scale,\n}) => {\n\n  const [currentFont, setCurrentFont] = useState(fontSize || 16);\n\n  return (\n    <Text\n      onTextLayout={(e) => {\n        if (!scale) return;\n        const { lines } = e.nativeEvent;\n        if (lines.length > 2) {\n          setCurrentFont(currentFont - 1);\n        }\n      }}\n      style={[\n        style.bodyBold,\n        light && style.light,\n        lighter && style.lighter,\n        brand && style.brand,\n        fontSize && {\n          fontSize: currentFont,\n        },\n        centered && style.centered,\n        color && {\n          color,\n        },\n        secondaryFont && style.secondaryFont,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n};\n\nBodyBold.propTypes = {\n  children: PropTypes.node,\n  light: PropTypes.bool,\n  lighter: PropTypes.bool,\n  fontSize: PropTypes.number,\n  brand: PropTypes.bool,\n  centered: PropTypes.bool,\n  color: PropTypes.string,\n  secondaryFont: PropTypes.bool,\n  scale: PropTypes.bool,\n};\n\nBodyBold.defaultProps = {\n  children: null,\n  light: false,\n  lighter: false,\n  fontSize: 16,\n  brand: false,\n  centered: false,\n  color: null,\n  secondaryFont: false,\n  scale: false,\n};\n\nexport default BodyBold;\n"]},"metadata":{},"sourceType":"script"}