{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ActivityIndicator = _interopRequireDefault(require(\"react-native-web/dist/exports/ActivityIndicator\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Container = _interopRequireDefault(require(\"../Container\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _schema = require(\"./schema\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      containerStyle = _ref.containerStyle,\n      titleStyle = _ref.titleStyle,\n      renderLeftIcon = _ref.renderLeftIcon,\n      renderRightIcon = _ref.renderRightIcon,\n      disabled = _ref.disabled,\n      bordered = _ref.bordered,\n      width = _ref.width,\n      justifyStart = _ref.justifyStart,\n      justifyCenter = _ref.justifyCenter,\n      justifyEnd = _ref.justifyEnd,\n      fetching = _ref.fetching,\n      backgroundColor = _ref.backgroundColor;\n  return (0, _jsxRuntime.jsx)(_TouchableOpacity.default, {\n    onPress: onPress,\n    disabled: disabled,\n    style: [containerStyle, backgroundColor && {\n      backgroundColor: backgroundColor\n    }, width && {\n      width: width,\n      maxWidth: width\n    }],\n    children: (0, _jsxRuntime.jsxs)(_Container.default, {\n      style: [disabled && _styles.default.disabled, bordered && _styles.default.bordered],\n      row: true,\n      alignCenter: true,\n      justifyEnd: justifyEnd,\n      justifyCenter: justifyCenter,\n      justifyStart: justifyStart,\n      children: [renderLeftIcon && (0, _jsxRuntime.jsx)(_View.default, {\n        style: _styles.default.iconContainer,\n        children: renderLeftIcon()\n      }), fetching && (0, _jsxRuntime.jsx)(_Container.default, {\n        paddingX: 0.3,\n        children: (0, _jsxRuntime.jsx)(_ActivityIndicator.default, {})\n      }), (0, _jsxRuntime.jsx)(_Text.default, {\n        style: titleStyle,\n        children: title\n      }), renderRightIcon && (0, _jsxRuntime.jsx)(_View.default, {\n        style: _styles.default.iconContainer,\n        children: renderRightIcon()\n      })]\n    })\n  });\n};\n\nButton.propTypes = _schema.propTypes;\nButton.defaultProps = _schema.defaultProps;\nvar _default = Button;\nexports.default = _default;","map":{"version":3,"sources":["/Users/estebanjoaquin/src/examples/with-electron/component/Button/Button.js"],"names":["Button","title","onPress","containerStyle","titleStyle","renderLeftIcon","renderRightIcon","disabled","bordered","width","justifyStart","justifyCenter","justifyEnd","fetching","backgroundColor","maxWidth","styles"],"mappings":";;;;;;;AAAA;;;;;;AAGA;;;;;;AAEA;;AACA;;;;AAEA,IAAMA,MAAM,GAANA,SAAAA,MAAAA,CAAS,IAATA,EAAS;AAAA,MACbC,KADa,GAAA,IAAA,CAAA,KAAA;AAAA,MAEbC,OAFa,GAAA,IAAA,CAAA,OAAA;AAAA,MAGbC,cAHa,GAAA,IAAA,CAAA,cAAA;AAAA,MAIbC,UAJa,GAAA,IAAA,CAAA,UAAA;AAAA,MAKbC,cALa,GAAA,IAAA,CAAA,cAAA;AAAA,MAMbC,eANa,GAAA,IAAA,CAAA,eAAA;AAAA,MAObC,QAPa,GAAA,IAAA,CAAA,QAAA;AAAA,MAQbC,QARa,GAAA,IAAA,CAAA,QAAA;AAAA,MASbC,KATa,GAAA,IAAA,CAAA,KAAA;AAAA,MAUbC,YAVa,GAAA,IAAA,CAAA,YAAA;AAAA,MAWbC,aAXa,GAAA,IAAA,CAAA,aAAA;AAAA,MAYbC,UAZa,GAAA,IAAA,CAAA,UAAA;AAAA,MAabC,QAba,GAAA,IAAA,CAAA,QAAA;AAAA,MAcbC,eAda,GAAA,IAAA,CAAA,eAAA;AAAA,SAgBb,qBAAA,yBAAA,EAAA;AACE,IAAA,OAAO,EADT,OAAA;AAEE,IAAA,QAAQ,EAFV,QAAA;AAGE,IAAA,KAAK,EAAE,CAAA,cAAA,EAELA,eAAe,IAAI;AAAEA,MAAAA,eAAe,EAF/B;AAEc,KAFd,EAGLL,KAAK,IAAI;AACPA,MAAAA,KAAK,EADE,KAAA;AAEPM,MAAAA,QAAQ,EARd;AAMa,KAHJ,CAHT;AAAA,IAAA,QAAA,EAYE,sBAAA,kBAAA,EAAA;AACE,MAAA,KAAK,EAAE,CAACR,QAAQ,IAAIS,gBAAb,QAAA,EAA8BR,QAAQ,IAAIQ,gBADnD,QACS,CADT;AAEE,MAAA,GAAG,EAFL,IAAA;AAGE,MAAA,WAAW,EAHb,IAAA;AAIE,MAAA,UAAU,EAJZ,UAAA;AAKE,MAAA,aAAa,EALf,aAAA;AAME,MAAA,YAAY,EANd,YAAA;AAAA,MAAA,QAAA,EAAA,CAQGX,cAAc,IACb,qBAAA,aAAA,EAAA;AAAM,QAAA,KAAK,EAAEW,gBAAb,aAAA;AAAA,QAAA,QAAA,EAAoCX,cATxC;AASI,OAAA,CATJ,EAWGQ,QAAQ,IACP,qBAAA,kBAAA,EAAA;AAAW,QAAA,QAAQ,EAAnB,GAAA;AAAA,QAAA,QAAA,EACE,qBAAA,0BAAA,EAbN,EAaM;AADF,OAAA,CAZJ,EAgBE,qBAAA,aAAA,EAAA;AAAM,QAAA,KAAK,EAAX,UAAA;AAAA,QAAA,QAAA,EAhBF;AAgBE,OAAA,CAhBF,EAiBGP,eAAe,IACd,qBAAA,aAAA,EAAA;AAAM,QAAA,KAAK,EAAEU,gBAAb,aAAA;AAAA,QAAA,QAAA,EAAoCV,eA9C7B;AA8CP,OAAA,CAlBJ;AAAA,KAAA;AAZF,GAAA,CAhBa;AAAf,CAAA;;AAoDAN,MAAM,CAANA,SAAAA,GAAAA,iBAAAA;AACAA,MAAM,CAANA,YAAAA,GAAAA,oBAAAA;eAEA,M","sourcesContent":["import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\nimport { View } from \"react-native\";\nimport Container from \"../Container\";\nimport { Text, TouchableOpacity } from \"react-native\";\nimport { propTypes, defaultProps } from \"./schema\";\nimport styles from \"./styles\";\n\nconst Button = ({\n  title,\n  onPress,\n  containerStyle,\n  titleStyle,\n  renderLeftIcon,\n  renderRightIcon,\n  disabled,\n  bordered,\n  width,\n  justifyStart,\n  justifyCenter,\n  justifyEnd,\n  fetching,\n  backgroundColor\n}) => (\n  <TouchableOpacity\n    onPress={onPress}\n    disabled={disabled}\n    style={[\n      containerStyle,\n      backgroundColor && { backgroundColor },\n      width && {\n        width,\n        maxWidth: width,\n      },\n    ]}\n  >\n    <Container\n      style={[disabled && styles.disabled, bordered && styles.bordered ]}\n      row\n      alignCenter\n      justifyEnd={justifyEnd}\n      justifyCenter={justifyCenter}\n      justifyStart={justifyStart}\n    >\n      {renderLeftIcon && (\n        <View style={styles.iconContainer}>{renderLeftIcon()}</View>\n      )}\n      {fetching && (\n        <Container paddingX={0.3}>\n          <ActivityIndicator />\n        </Container>\n      )}\n      <Text style={titleStyle}>{title}</Text>\n      {renderRightIcon && (\n        <View style={styles.iconContainer}>{renderRightIcon()}</View>\n      )}\n    </Container>\n  </TouchableOpacity>\n);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"script"}